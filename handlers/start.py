from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
from keyboards.main_menu import get_main_menu
import logging

router = Router()

@router.message(Command("start"))
async def cmd_start(message: Message):
    await message.answer(
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç –ø–æ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏!\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=get_main_menu()
    )

@router.message(F.text == "üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å —Ä–∏—ç–ª—Ç–æ—Ä–æ–º")
async def contact_realtor(message: Message):
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–ù–∞–ø–∏—Å–∞—Ç—å –≤ Telegram", url="https://t.me/aleks8108")]
    ])
    await message.answer(
        "–°–≤—è–∂–∏—Ç–µ—Å—å —Å —Ä–∏—ç–ª—Ç–æ—Ä–æ–º:\nüìû +7 (905) 476-44-48\nüìß Email: aleks8108@gmail.com",
        reply_markup=keyboard
    )

@router.callback_query(lambda c: c.data == "request")
async def process_request(callback: CallbackQuery):
    await callback.message.answer("–ü–µ—Ä–µ—Ö–æ–¥ –∫ –ø–æ–¥–∞—á–µ –∑–∞—è–≤–∫–∏...", reply_markup=get_main_menu())
    await callback.answer()

@router.callback_query(lambda c: c.data == "appointment")
async def process_appointment(callback: CallbackQuery):
    await callback.message.answer("–ü–µ—Ä–µ—Ö–æ–¥ –∫ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—é –≤—Å—Ç—Ä–µ—á–∏...", reply_markup=get_main_menu())
    await callback.answer()

@router.callback_query(lambda c: c.data == "contact")
async def process_contact(callback: CallbackQuery):
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–ù–∞–ø–∏—Å–∞—Ç—å –≤ Telegram", url="https://t.me/aleks8108")]
    ])
    await callback.message.answer(
        "–°–≤—è–∂–∏—Ç–µ—Å—å —Å —Ä–∏—ç–ª—Ç–æ—Ä–æ–º:\nüìû +7 (905) 476-44-48\nüìß Email: aleks8108@gmail.com",
        reply_markup=keyboard
    )
    await callback.answer()

@router.callback_query(lambda c: c.data == "return_to_menu")
async def return_to_menu(callback: CallbackQuery):
    try:
        await callback.message.edit_text(
            "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=get_main_menu()
        )
    except Exception as e:
        if "message is not modified" in str(e):
            pass
        else:
            logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
    await callback.answer()