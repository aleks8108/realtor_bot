# –§–∞–π–ª: handlers/start.py

from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
from aiogram.fsm.context import FSMContext
from utils.keyboards import get_main_menu, get_menu_and_clear_buttons  # –î–æ–±–∞–≤–ª–µ–Ω –∏–º–ø–æ—Ä—Ç
from states.request import RequestStates  # –î–æ–±–∞–≤–ª–µ–Ω –∏–º–ø–æ—Ä—Ç (–¥–ª—è –æ—à–∏–±–∫–∏ 3)
import logging

logging.basicConfig(level=logging.DEBUG)
router = Router()

@router.message(Command("start"))
async def cmd_start(message: Message):
    await message.answer(
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç –ø–æ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏!\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=get_main_menu()
    )

@router.message(F.text == "üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å —Ä–∏—ç–ª—Ç–æ—Ä–æ–º")
async def contact_realtor(message: Message):
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–ù–∞–ø–∏—Å–∞—Ç—å –≤ Telegram", url="https://t.me/aleks8108")]
    ])
    await message.answer(
        "–°–≤—è–∂–∏—Ç–µ—Å—å —Å —Ä–∏—ç–ª—Ç–æ—Ä–æ–º:\nüìû +7 (905) 476-44-48\nüìß Email: aleks8108@gmail.com",
        reply_markup=keyboard
    )

@router.callback_query(lambda c: c.data == "request")
async def process_request(callback: CallbackQuery, state: FSMContext):
    logging.info(f"–û–±—Ä–∞–±–æ—Ç–∞–Ω callback 'request' –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {callback.from_user.id}")
    await callback.message.answer("–ù–∞—á–∞–ª–æ –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–∫–∏. –í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:", reply_markup=get_menu_and_clear_buttons())
    await state.set_state(RequestStates.name)
    await callback.answer()

@router.callback_query(lambda c: c.data == "contact")
async def process_contact(callback: CallbackQuery):
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–ù–∞–ø–∏—Å–∞—Ç—å –≤ Telegram", url="https://t.me/aleks8108")]
    ])
    await callback.message.answer(
        "–°–≤—è–∂–∏—Ç–µ—Å—å —Å —Ä–∏—ç–ª—Ç–æ—Ä–æ–º:\nüìû +7 (905) 476-44-48\nüìß Email: aleks8108@gmail.com",
        reply_markup=keyboard
    )
    await callback.answer()

# –§–∞–π–ª: handlers/start.py
@router.callback_query(lambda c: c.data == "return_to_menu")
async def return_to_menu(callback: CallbackQuery, state: FSMContext):
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–Ω–æ –ª–∏ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
        message = callback.message
        if not message.text and not message.caption:  # –ï—Å–ª–∏ –Ω–µ—Ç —Ç–µ–∫—Å—Ç–∞ –∏–ª–∏ –ø–æ–¥–ø–∏—Å–∏
            await callback.message.answer(
                "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
                reply_markup=get_main_menu()
            )
        else:
            await callback.message.edit_text(
                "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
                reply_markup=get_main_menu()
            )
    except Exception as e:
        if "message is not modified" in str(e):
            pass
        else:
            logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
            await callback.message.answer(
                "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
                reply_markup=get_main_menu()
            )
    await state.clear()
    await callback.answer()