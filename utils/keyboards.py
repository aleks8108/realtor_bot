"""
–ú–æ–¥—É–ª—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä –¥–ª—è —Ä–∏—ç–ª—Ç–æ—Ä—Å–∫–æ–≥–æ –±–æ—Ç–∞.
–°–æ–¥–µ—Ä–∂–∏—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è inline –∏ reply –∫–ª–∞–≤–∏–∞—Ç—É—Ä –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤.
"""

import logging
from typing import Optional, List, Dict, Any
from aiogram.types import (
    InlineKeyboardMarkup, InlineKeyboardButton, 
    ReplyKeyboardMarkup, KeyboardButton
)

logger = logging.getLogger(__name__)


def get_main_menu() -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞ —Å –≥–ª–∞–≤–Ω—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏.
    
    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
    """
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üìù –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É", callback_data="request")],
        [InlineKeyboardButton(text="üîç –ü–æ–∏—Å–∫ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏", callback_data="search")],
        [InlineKeyboardButton(text="üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å —Ä–∏—ç–ª—Ç–æ—Ä–æ–º", callback_data="contact")]
    ])


def get_start_reply_keyboard() -> ReplyKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è.
    –ü–æ–ª–µ–∑–Ω–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞—é—Ç –æ–±—ã—á–Ω—ã–µ –∫–Ω–æ–ø–∫–∏.
    
    Returns:
        ReplyKeyboardMarkup: Reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –æ—Å–Ω–æ–≤–Ω—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏
    """
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üìù –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É")],
            [KeyboardButton(text="üîç –ü–æ–∏—Å–∫ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏")],
            [KeyboardButton(text="üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å —Ä–∏—ç–ª—Ç–æ—Ä–æ–º")]
        ],
        resize_keyboard=True,
        one_time_keyboard=False
    )


def get_property_type_keyboard() -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏.
    
    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å —Ç–∏–ø–∞–º–∏ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏
    """
    return InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="üè† –ö–≤–∞—Ä—Ç–∏—Ä–∞", callback_data="property_type_–ö–≤–∞—Ä—Ç–∏—Ä–∞"),
            InlineKeyboardButton(text="üèò –î–æ–º", callback_data="property_type_–î–æ–º")
        ],
        [
            InlineKeyboardButton(text="üè¢ –ö–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è", callback_data="property_type_–ö–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è"),
            InlineKeyboardButton(text="üå± –£—á–∞—Å—Ç–æ–∫", callback_data="property_type_–ó–µ–º–µ–ª—å–Ω—ã–π —É—á–∞—Å—Ç–æ–∫")
        ],
        [InlineKeyboardButton(text="üîô –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="return_to_menu")]
    ])


def get_deal_type_keyboard() -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ —Å–¥–µ–ª–∫–∏.
    
    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å —Ç–∏–ø–∞–º–∏ —Å–¥–µ–ª–æ–∫
    """
    return InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="üí∞ –ü–æ–∫—É–ø–∫–∞", callback_data="deal_type_–ü–æ–∫—É–ø–∫–∞"),
            InlineKeyboardButton(text="üè† –ê—Ä–µ–Ω–¥–∞", callback_data="deal_type_–ê—Ä–µ–Ω–¥–∞")
        ],
        [InlineKeyboardButton(text="üîô –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="return_to_menu")]
    ])


def get_district_keyboard() -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ä–∞–π–æ–Ω–∞.
    –†–∞–π–æ–Ω—ã –º–æ–∂–Ω–æ –ª–µ–≥–∫–æ –∏–∑–º–µ–Ω–∏—Ç—å –∑–¥–µ—Å—å –±–µ–∑ –ø—Ä–∞–≤–∫–∏ –≤—Å–µ–≥–æ –∫–æ–¥–∞.
    
    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å —Ä–∞–π–æ–Ω–∞–º–∏
    """
    return InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="üèõ –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π", callback_data="district_–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π"),
            InlineKeyboardButton(text="üåÖ –ó–∞–ø–∞–¥–Ω—ã–π", callback_data="district_–ó–∞–ø–∞–¥–Ω—ã–π")
        ],
        [
            InlineKeyboardButton(text="üåä –ü—Ä–∏–∫—É–±–∞–Ω—Å–∫–∏–π", callback_data="district_–ü—Ä–∏–∫—É–±–∞–Ω—Å–∫–∏–π"),
            InlineKeyboardButton(text="üå≥ –ö–∞—Ä–∞—Å—É–Ω—Å–∫–∏–π", callback_data="district_–ö–∞—Ä–∞—Å—É–Ω—Å–∫–∏–π")
        ],
        [
            InlineKeyboardButton(text="üåÜ –§–µ—Å—Ç–∏–≤–∞–ª—å–Ω—ã–π", callback_data="district_–§–µ—Å—Ç–∏–≤–∞–ª—å–Ω—ã–π"),
            InlineKeyboardButton(text="üè≠ –ö–æ–º—Å–æ–º–æ–ª—å—Å–∫–∏–π", callback_data="district_–ö–æ–º—Å–æ–º–æ–ª—å—Å–∫–∏–π")
        ],
        [InlineKeyboardButton(text="üîô –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="return_to_menu")]
    ])


def get_budget_keyboard() -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –±—é–¥–∂–µ—Ç–∞.
    –î–∏–∞–ø–∞–∑–æ–Ω—ã —Ü–µ–Ω –∞–∫—Ç—É–∞–ª—å–Ω—ã –¥–ª—è —Ä—ã–Ω–∫–∞ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏.
    
    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –¥–∏–∞–ø–∞–∑–æ–Ω–∞–º–∏ —Ü–µ–Ω
    """
    return InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="üíµ –¥–æ 3 –º–ª–Ω", callback_data="budget_0-3000000"),
            InlineKeyboardButton(text="üí∞ 3-5 –º–ª–Ω", callback_data="budget_3000000-5000000")
        ],
        [
            InlineKeyboardButton(text="üíé 5-10 –º–ª–Ω", callback_data="budget_5000000-10000000"),
            InlineKeyboardButton(text="üëë 10-20 –º–ª–Ω", callback_data="budget_10000000-20000000")
        ],
        [
            InlineKeyboardButton(text="üè∞ 20-50 –º–ª–Ω", callback_data="budget_20000000-50000000"),
            InlineKeyboardButton(text="üí∏ 50+ –º–ª–Ω", callback_data="budget_50000000-999999999")
        ],
        [InlineKeyboardButton(text="üîô –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="return_to_menu")]
    ])


def get_rooms_keyboard() -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∫–æ–º–Ω–∞—Ç.
    
    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∫–æ–º–Ω–∞—Ç
    """
    return InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="1Ô∏è‚É£ 1 –∫–æ–º–Ω–∞—Ç–∞", callback_data="rooms_1"),
            InlineKeyboardButton(text="2Ô∏è‚É£ 2 –∫–æ–º–Ω–∞—Ç—ã", callback_data="rooms_2"),
            InlineKeyboardButton(text="3Ô∏è‚É£ 3 –∫–æ–º–Ω–∞—Ç—ã", callback_data="rooms_3")
        ],
        [
            InlineKeyboardButton(text="4Ô∏è‚É£ 4 –∫–æ–º–Ω–∞—Ç—ã", callback_data="rooms_4"),
            InlineKeyboardButton(text="5Ô∏è‚É£ 5+ –∫–æ–º–Ω–∞—Ç", callback_data="rooms_5"),
            InlineKeyboardButton(text="‚ùì –ù–µ –≤–∞–∂–Ω–æ", callback_data="rooms_none")
        ],
        [InlineKeyboardButton(text="üîô –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="return_to_menu")]
    ])


def get_contact_keyboard() -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π.
    
    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏
    """
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚úàÔ∏è –ù–∞–ø–∏—Å–∞—Ç—å –≤ Telegram", url="https://t.me/aleks8108")],
        [InlineKeyboardButton(text="üìû –ü–æ–∑–≤–æ–Ω–∏—Ç—å", url="tel:+79054764448")],
        [InlineKeyboardButton(text="‚úâÔ∏è –ù–∞–ø–∏—Å–∞—Ç—å Email", url="mailto:aleks8108@gmail.com")],
        [InlineKeyboardButton(text="üîô –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="return_to_menu")]
    ])


def get_phone_request_keyboard() -> ReplyKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞.
    
    Returns:
        ReplyKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–Ω—Ç–∞–∫—Ç–∞
    """
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üì± –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", request_contact=True)],
            [KeyboardButton(text="‚úçÔ∏è –í–≤–µ—Å—Ç–∏ –Ω–æ–º–µ—Ä –≤—Ä—É—á–Ω—É—é")]
        ],
        resize_keyboard=True,
        one_time_keyboard=True
    )


def get_menu_and_clear_buttons() -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é –∏ –æ—á–∏—Å—Ç–∫–∏ —á–∞—Ç–∞.
    
    Returns:
        InlineKeyboardMarkup: –°–ª—É–∂–µ–±–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
    """
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="return_to_menu")],
        [InlineKeyboardButton(text="üóë –û—á–∏—Å—Ç–∏—Ç—å —á–∞—Ç", callback_data="clear_chat")]
    ])


def get_listing_menu(
    listing_exists: bool,
    comments_provided: bool,
    has_next_listing: bool,
    listing_index: int,
    photo_index: int,
    total_photos: int,
    total_listings: int,
    listing_id: str
) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç —Å–ª–æ–∂–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ –æ–±—ä–µ–∫—Ç–∞–º –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏.
    
    Args:
        listing_exists: –ï—Å—Ç—å –ª–∏ –æ–±—ä–µ–∫—Ç—ã –¥–ª—è –ø–æ–∫–∞–∑–∞
        comments_provided: –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω—ã –ª–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
        has_next_listing: –ï—Å—Ç—å –ª–∏ —Å–ª–µ–¥—É—é—â–∏–π –æ–±—ä–µ–∫—Ç
        listing_index: –ò–Ω–¥–µ–∫—Å —Ç–µ–∫—É—â–µ–≥–æ –æ–±—ä–µ–∫—Ç–∞
        photo_index: –ò–Ω–¥–µ–∫—Å —Ç–µ–∫—É—â–µ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
        total_photos: –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
        total_listings: –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—ä–µ–∫—Ç–æ–≤
        listing_id: ID —Ç–µ–∫—É—â–µ–≥–æ –æ–±—ä–µ–∫—Ç–∞
    
    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ –æ–±—ä–µ–∫—Ç–∞–º
    """
    if not isinstance(listing_index, int) or not isinstance(photo_index, int):
        logger.error(f"–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –∏–Ω–¥–µ–∫—Å—ã: listing_index={listing_index}, photo_index={photo_index}")
        return InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üîô –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="return_to_menu")]
        ])
    
    buttons = []
    
    if listing_exists:
        # –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º
        photo_nav_buttons = []
        if total_photos > 1:
            if photo_index > 0:
                photo_nav_buttons.append(
                    InlineKeyboardButton(
                        text="‚¨ÖÔ∏è –§–æ—Ç–æ", 
                        callback_data=f"prev_photo_{listing_index}_{photo_index-1}"
                    )
                )
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â—É—é –ø–æ–∑–∏—Ü–∏—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
            if total_photos > 1:
                photo_nav_buttons.append(
                    InlineKeyboardButton(
                        text=f"üì∏ {photo_index+1}/{total_photos}",
                        callback_data="photo_info"
                    )
                )
            
            if photo_index < total_photos - 1:
                photo_nav_buttons.append(
                    InlineKeyboardButton(
                        text="–§–æ—Ç–æ ‚û°Ô∏è", 
                        callback_data=f"next_photo_{listing_index}_{photo_index+1}"
                    )
                )
        
        if photo_nav_buttons:
            buttons.append(photo_nav_buttons)
        
        # –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –æ–±—ä–µ–∫—Ç–∞–º
        listing_nav_buttons = []
        if total_listings > 1:
            if listing_index > 0:
                listing_nav_buttons.append(
                    InlineKeyboardButton(
                        text="‚¨ÖÔ∏è –û–±—ä–µ–∫—Ç", 
                        callback_data=f"prev_listing_{listing_index-1}"
                    )
                )
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â—É—é –ø–æ–∑–∏—Ü–∏—é –æ–±—ä–µ–∫—Ç–∞
            listing_nav_buttons.append(
                InlineKeyboardButton(
                    text=f"üè† {listing_index+1}/{total_listings}",
                    callback_data="listing_info"
                )
            )
            
            if has_next_listing:
                listing_nav_buttons.append(
                    InlineKeyboardButton(
                        text="–û–±—ä–µ–∫—Ç ‚û°Ô∏è", 
                        callback_data=f"next_listing_{listing_index+1}"
                    )
                )
        
        if listing_nav_buttons:
            buttons.append(listing_nav_buttons)
        
        # –ö–Ω–æ–ø–∫–∞ –∏–Ω—Ç–µ—Ä–µ—Å–∞
        buttons.append([
            InlineKeyboardButton(
                text="‚ù§Ô∏è –ò–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç", 
                callback_data=f"interested_{listing_id}"
            )
        ])
        
        # –ï—Å–ª–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω—ã, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
        if comments_provided:
            buttons.append([
                InlineKeyboardButton(
                    text="‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å –∑–∞—è–≤–∫—É", 
                    callback_data="finish_request"
                )
            ])
    
    # –°–∏—Å—Ç–µ–º–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
    system_buttons = []
    if not comments_provided:
        system_buttons.append(
            InlineKeyboardButton(
                text="üîç –ù–æ–≤—ã–π –ø–æ–∏—Å–∫", 
                callback_data="search"
            )
        )
    
    system_buttons.append(
        InlineKeyboardButton(
            text="üîô –í –º–µ–Ω—é", 
            callback_data="return_to_menu"
        )
    )
    
    buttons.append(system_buttons)
    
    return InlineKeyboardMarkup(inline_keyboard=buttons)


def get_admin_panel_keyboard() -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–π –ø–∞–Ω–µ–ª–∏.
    
    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–π –ø–∞–Ω–µ–ª–∏
    """
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞—è–≤–æ–∫", callback_data="admin_stats")],
        [InlineKeyboardButton(text="üë• –ü–æ—Å–ª–µ–¥–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è", callback_data="admin_actions")],
        [InlineKeyboardButton(text="üìã –ò—Å—Ç–æ—Ä–∏—è –∑–∞—è–≤–æ–∫", callback_data="admin_requests")],
        [InlineKeyboardButton(text="üîÑ –û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ", callback_data="admin_refresh")],
        [InlineKeyboardButton(text="üîô –ó–∞–∫—Ä—ã—Ç—å –ø–∞–Ω–µ–ª—å", callback_data="return_to_menu")]
    ])


def create_pagination_keyboard(
    current_page: int, 
    total_pages: int, 
    callback_pattern: str,
    additional_buttons: Optional[List[List[InlineKeyboardButton]]] = None
) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π –¥–ª—è –±–æ–ª—å—à–∏—Ö —Å–ø–∏—Å–∫–æ–≤ –¥–∞–Ω–Ω—ã—Ö.
    
    Args:
        current_page: –¢–µ–∫—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ (–Ω–∞—á–∏–Ω–∞—è —Å 0)
        total_pages: –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü
        callback_pattern: –®–∞–±–ª–æ–Ω –¥–ª—è callback_data (–¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å {page})
        additional_buttons: –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
    
    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
    """
    buttons = []
    
    if additional_buttons:
        buttons.extend(additional_buttons)
    
    # –ö–Ω–æ–ø–∫–∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
    if total_pages > 1:
        pagination_buttons = []
        
        # –ö–Ω–æ–ø–∫–∞ "–ü—Ä–µ–¥—ã–¥—É—â–∞—è"
        if current_page > 0:
            pagination_buttons.append(
                InlineKeyboardButton(
                    text="‚¨ÖÔ∏è", 
                    callback_data=callback_pattern.format(page=current_page-1)
                )
            )
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
        pagination_buttons.append(
            InlineKeyboardButton(
                text=f"{current_page+1}/{total_pages}",
                callback_data="page_info"
            )
        )
        
        # –ö–Ω–æ–ø–∫–∞ "–°–ª–µ–¥—É—é—â–∞—è"
        if current_page < total_pages - 1:
            pagination_buttons.append(
                InlineKeyboardButton(
                    text="‚û°Ô∏è", 
                    callback_data=callback_pattern.format(page=current_page+1)
                )
            )
        
        buttons.append(pagination_buttons)
    
    # –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é
    buttons.append([
        InlineKeyboardButton(text="üîô –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="return_to_menu")
    ])
    
    return InlineKeyboardMarkup(inline_keyboard=buttons)