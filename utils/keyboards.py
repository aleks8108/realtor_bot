"""
–ú–æ–¥—É–ª—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä –¥–ª—è —Ä–∏—ç–ª—Ç–æ—Ä—Å–∫–æ–≥–æ –±–æ—Ç–∞.
–°–æ–¥–µ—Ä–∂–∏—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
–∏ –±–æ–ª–µ–µ –≥–∏–±–∫–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–æ–π –∫–Ω–æ–ø–æ–∫ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞.
"""

import logging
from typing import List, Optional, Tuple
from aiogram.types import (
    InlineKeyboardMarkup, InlineKeyboardButton,
    ReplyKeyboardMarkup, KeyboardButton
)

logger = logging.getLogger(__name__)

def create_main_keyboard() -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω—É—é inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≥–ª–∞–≤–Ω—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏ –±–æ—Ç–∞.
    """
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üìù –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É", callback_data="create_request")],
        [InlineKeyboardButton(text="üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å —Ä–∏—ç–ª—Ç–æ—Ä–æ–º", callback_data="contact_realtor")],
        [InlineKeyboardButton(text="üìä –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—ã", callback_data="open_calculators")]
    ])

def create_cancel_keyboard() -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π –æ—Ç–º–µ–Ω—ã/–≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é.
    """
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="return_to_menu")]
    ])

def create_property_keyboard(property_types: List[Tuple[str, str]], callback_prefix: str) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏.
    """
    buttons = []
    for i in range(0, len(property_types), 2):
        row = []
        for j in range(i, min(i + 2, len(property_types))):
            text, value = property_types[j]
            row.append(InlineKeyboardButton(
                text=text,
                callback_data=f"{callback_prefix}_{value}"
            ))
        buttons.append(row)
    
    buttons.append([InlineKeyboardButton(text="üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="return_to_menu")])
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def get_main_menu() -> InlineKeyboardMarkup:
    return create_main_keyboard()

def get_start_reply_keyboard() -> ReplyKeyboardMarkup:
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üìù –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É")],
            [KeyboardButton(text="üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å —Ä–∏—ç–ª—Ç–æ—Ä–æ–º")]
        ],
        resize_keyboard=True,
        one_time_keyboard=True,
        input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ..."
    )

def get_deal_type_keyboard() -> InlineKeyboardMarkup:
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="üí∞ –ü–æ–∫—É–ø–∫–∞", callback_data="deal_type_–ü–æ–∫—É–ø–∫–∞"),
            InlineKeyboardButton(text="üè† –ê—Ä–µ–Ω–¥–∞", callback_data="deal_type_–ê—Ä–µ–Ω–¥–∞")
        ]
    ])
    keyboard.inline_keyboard.extend(create_cancel_keyboard().inline_keyboard)
    return keyboard

def get_district_keyboard() -> InlineKeyboardMarkup:
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="üèõ –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π", callback_data="val_district_–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π"),
            InlineKeyboardButton(text="üåÖ –ó–∞–ø–∞–¥–Ω—ã–π", callback_data="val_district_–ó–∞–ø–∞–¥–Ω—ã–π")
        ],
        [
            InlineKeyboardButton(text="üåä –ü—Ä–∏–∫—É–±–∞–Ω—Å–∫–∏–π", callback_data="val_district_–ü—Ä–∏–∫—É–±–∞–Ω—Å–∫–∏–π"),
            InlineKeyboardButton(text="üèû –ö–∞—Ä–∞—Å—É–Ω—Å–∫–∏–π", callback_data="val_district_–ö–∞—Ä–∞—Å—É–Ω—Å–∫–∏–π")
        ]
    ])
    keyboard.inline_keyboard.extend(create_cancel_keyboard().inline_keyboard)
    return keyboard

def get_budget_keyboard() -> InlineKeyboardMarkup:
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="üíµ –¥–æ 5 –º–ª–Ω", callback_data="budget_0-5000000"),
            InlineKeyboardButton(text="üí∏ 5-10 –º–ª–Ω", callback_data="budget_5000000-10000000")
        ],
        [
            InlineKeyboardButton(text="üí∞ 10-50 –º–ª–Ω", callback_data="budget_10000000-50000000"),
            InlineKeyboardButton(text="üíé 50-100 –º–ª–Ω", callback_data="budget_50000000-100000000")
        ],
        [
            InlineKeyboardButton(text="üî• –±–æ–ª–µ–µ 100 –º–ª–Ω", callback_data="budget_100000000-1000000000")
        ]
    ])
    keyboard.inline_keyboard.extend(create_cancel_keyboard().inline_keyboard)
    return keyboard

def get_rooms_keyboard() -> InlineKeyboardMarkup:
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="1Ô∏è‚É£ 1 –∫–æ–º–Ω–∞—Ç–∞", callback_data="rooms_1"),
            InlineKeyboardButton(text="2Ô∏è‚É£ 2 –∫–æ–º–Ω–∞—Ç—ã", callback_data="rooms_2"),
            InlineKeyboardButton(text="3Ô∏è‚É£ 3 –∫–æ–º–Ω–∞—Ç—ã", callback_data="rooms_3")
        ],
        [
            InlineKeyboardButton(text="4Ô∏è‚É£ 4 –∫–æ–º–Ω–∞—Ç—ã", callback_data="rooms_4"),
            InlineKeyboardButton(text="5Ô∏è‚É£ 5+ –∫–æ–º–Ω–∞—Ç", callback_data="rooms_5"),
            InlineKeyboardButton(text="‚ùì –ù–µ –≤–∞–∂–Ω–æ", callback_data="rooms_none")
        ]
    ])
    keyboard.inline_keyboard.extend(create_cancel_keyboard().inline_keyboard)
    return keyboard

def get_menu_and_clear_buttons() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="return_to_menu")],
        [InlineKeyboardButton(text="üßπ –û—á–∏—Å—Ç–∏—Ç—å —á–∞—Ç", callback_data="clear_chat")]
    ])

def get_listing_menu(
    listing_exists: bool,
    comments_provided: bool = False,
    has_next_listing: bool = False,
    listing_index: int = 0,
    photo_index: int = 0,
    total_photos: int = 0,
    total_listings: int = 0,
    listing_id: Optional[str] = None
) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –¥–∏–Ω–∞–º–∏—á–µ—Å–∫—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –æ–±—ä–µ–∫—Ç–æ–º –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏.
    """
    if not isinstance(listing_index, int) or not isinstance(photo_index, int):
        logger.error(
            f"–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ —Ç–∏–ø—ã –∏–Ω–¥–µ–∫—Å–æ–≤: listing_index={type(listing_index)}, "
            f"photo_index={type(photo_index)}"
        )
        return get_main_menu()

    if listing_index < 0 or photo_index < 0:
        logger.error(f"–û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ –∏–Ω–¥–µ–∫—Å—ã: listing_index={listing_index}, photo_index={photo_index}")
        return get_main_menu()

    if not listing_exists:
        return get_main_menu()

    buttons = []

    if listing_id:
        buttons.append([
            InlineKeyboardButton(text="üìã –ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É", callback_data=f"request_{listing_id}"),
            InlineKeyboardButton(text="‚ù§Ô∏è –ò–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç", callback_data=f"interested_{listing_id}")
        ])

    if comments_provided:
        buttons.append([
            InlineKeyboardButton(text="‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å –∑–∞—è–≤–∫—É", callback_data="finish_request")
        ])

    buttons.append([InlineKeyboardButton(text="üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="return_to_menu")])

    return InlineKeyboardMarkup(inline_keyboard=buttons)

def get_contact_keyboard() -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π.
    """
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üìû –û—Ç–¥–µ–ª –ø—Ä–æ–¥–∞–∂", callback_data="show_sales_phone")],
        [InlineKeyboardButton(text="üìû –û—Ç–¥–µ–ª –∞—Ä–µ–Ω–¥—ã", callback_data="show_rent_phone")],
        [InlineKeyboardButton(text="üìß Email", callback_data="show_email")]
    ])

def get_admin_keyboard() -> InlineKeyboardMarkup:
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üë• –î–µ–π—Å—Ç–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", callback_data="view_actions")],
        [InlineKeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞—è–≤–æ–∫", callback_data="view_stats")],
        [InlineKeyboardButton(text="üìã –ò—Å—Ç–æ—Ä–∏—è –∑–∞—è–≤–æ–∫", callback_data="view_requests")]
    ])
    keyboard.inline_keyboard.extend(create_cancel_keyboard().inline_keyboard)
    return keyboard

def create_confirmation_keyboard(
    confirm_callback: str,
    cancel_callback: str = "return_to_menu",
    confirm_text: str = "‚úÖ –î–∞",
    cancel_text: str = "‚ùå –ù–µ—Ç"
) -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text=confirm_text, callback_data=confirm_callback),
            InlineKeyboardButton(text=cancel_text, callback_data=cancel_callback)
        ]
    ])

def get_back_to_menu_keyboard() -> InlineKeyboardMarkup:
    return create_cancel_keyboard()

def get_property_type_keyboard() -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏.
    """
    return InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="üè† –ö–≤–∞—Ä—Ç–∏—Ä–∞", callback_data="property_type_–ö–≤–∞—Ä—Ç–∏—Ä–∞"),
            InlineKeyboardButton(text="üè° –î–æ–º", callback_data="property_type_–î–æ–º")
        ],
        [
            InlineKeyboardButton(text="üè¢ –ö–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è", callback_data="property_type_–ö–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è"),
            InlineKeyboardButton(text="üè¢ –ó–µ–º–µ–ª—å–Ω—ã–π —É—á–∞—Å—Ç–æ–∫", callback_data="property_type_–ó–µ–º–µ–ª—å–Ω—ã–π —É—á–∞—Å—Ç–æ–∫")
        ],
        [
            InlineKeyboardButton(text="üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="return_to_menu")
        ]
    ])