import logging
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton

def get_main_menu():
    """
    –°–æ–∑–¥–∞—ë—Ç –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é (inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞).
    :return: InlineKeyboardMarkup
    """
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üìù –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É", callback_data="request")],
        [InlineKeyboardButton(text="üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å —Ä–∏—ç–ª—Ç–æ—Ä–æ–º", callback_data="contact")],
        [InlineKeyboardButton(text="üîç –ü–æ–∏—Å–∫ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏", callback_data="search")]
    ])

def get_start_reply_keyboard():
    """
    –°–æ–∑–¥–∞—ë—Ç reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –º–µ–Ω—é (–∞–Ω–∞–ª–æ–≥ get_main_menu).
    :return: ReplyKeyboardMarkup
    """
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üìù –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É")],
            [KeyboardButton(text="üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å —Ä–∏—ç–ª—Ç–æ—Ä–æ–º")],
            [KeyboardButton(text="üîç –ü–æ–∏—Å–∫ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏")]
        ],
        resize_keyboard=True
    )

def get_property_type_keyboard():
    """
    –°–æ–∑–¥–∞—ë—Ç inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏.
    :return: InlineKeyboardMarkup
    """
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–ö–≤–∞—Ä—Ç–∏—Ä–∞", callback_data="property_type_–ö–≤–∞—Ä—Ç–∏—Ä–∞"),
         InlineKeyboardButton(text="–î–æ–º", callback_data="property_type_–î–æ–º")],
        [InlineKeyboardButton(text="–ö–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è", callback_data="property_type_–ö–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è"),
         InlineKeyboardButton(text="–ó–µ–º–µ–ª—å–Ω—ã–π —É—á–∞—Å—Ç–æ–∫", callback_data="property_type_–ó–µ–º–µ–ª—å–Ω—ã–π —É—á–∞—Å—Ç–æ–∫")]
    ])

def get_deal_type_keyboard():
    """
    –°–æ–∑–¥–∞—ë—Ç inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ —Å–¥–µ–ª–∫–∏.
    :return: InlineKeyboardMarkup
    """
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–ü–æ–∫—É–ø–∫–∞", callback_data="deal_type_–ü–æ–∫—É–ø–∫–∞"),
         InlineKeyboardButton(text="–ê—Ä–µ–Ω–¥–∞", callback_data="deal_type_–ê—Ä–µ–Ω–¥–∞")]
    ])

def get_district_keyboard():
    """
    –°–æ–∑–¥–∞—ë—Ç inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ä–∞–π–æ–Ω–∞.
    :return: InlineKeyboardMarkup
    """
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π", callback_data="district_–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π"),
         InlineKeyboardButton(text="–ó–∞–ø–∞–¥–Ω—ã–π", callback_data="district_–ó–∞–ø–∞–¥–Ω—ã–π")],
        [InlineKeyboardButton(text="–ü—Ä–∏–∫—É–±–∞–Ω—Å–∫–∏–π", callback_data="district_–ü—Ä–∏–∫—É–±–∞–Ω—Å–∫–∏–π"),
         InlineKeyboardButton(text="–ö–∞—Ä–∞—Å—É–Ω—Å–∫–∏–π", callback_data="district_–ö–∞—Ä–∞—Å—É–Ω—Å–∫–∏–π")]
    ])

def get_budget_keyboard():
    """
    –°–æ–∑–¥–∞—ë—Ç inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –±—é–¥–∂–µ—Ç–∞.
    :return: InlineKeyboardMarkup
    """
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="0-5 –º–ª–Ω", callback_data="budget_0-5000000"),
         InlineKeyboardButton(text="5-10 –º–ª–Ω", callback_data="budget_5000000-10000000")],
        [InlineKeyboardButton(text="10-50 –º–ª–Ω", callback_data="budget_10000000-50000000"),
         InlineKeyboardButton(text="50-100 –º–ª–Ω", callback_data="budget_50000000-100000000")]
    ])

def get_rooms_keyboard():
    """
    –°–æ–∑–¥–∞—ë—Ç inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∫–æ–º–Ω–∞—Ç.
    :return: InlineKeyboardMarkup
    """
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="1 –∫–æ–º–Ω–∞—Ç–∞", callback_data="rooms_1"),
         InlineKeyboardButton(text="2 –∫–æ–º–Ω–∞—Ç—ã", callback_data="rooms_2"),
         InlineKeyboardButton(text="3 –∫–æ–º–Ω–∞—Ç—ã", callback_data="rooms_3")],
        [InlineKeyboardButton(text="4 –∫–æ–º–Ω–∞—Ç—ã", callback_data="rooms_4"),
         InlineKeyboardButton(text="5 –∫–æ–º–Ω–∞—Ç", callback_data="rooms_5"),
         InlineKeyboardButton(text="–ù–µ –≤—ã–±—Ä–∞–Ω–æ", callback_data="rooms_none")]
    ])

def get_menu_and_clear_buttons():
    """
    –°–æ–∑–¥–∞—ë—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é" –∏ "–û—á–∏—Å—Ç–∏—Ç—å —á–∞—Ç".
    :return: InlineKeyboardMarkup
    """
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="return_to_menu")],
        [InlineKeyboardButton(text="–û—á–∏—Å—Ç–∏—Ç—å —á–∞—Ç", callback_data="clear_chat")]
    ])

def get_listing_menu(listing_exists, comments_provided, has_next_listing, listing_index, photo_index, total_photos, total_listings, listing_id):
    """
    –°–æ–∑–¥–∞—ë—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏.
    :param listing_exists: –°—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –æ–±—ä–µ–∫—Ç.
    :param comments_provided: –ë—ã–ª –ª–∏ –≤–≤–µ–¥—ë–Ω –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π.
    :param has_next_listing: –ï—Å—Ç—å –ª–∏ —Å–ª–µ–¥—É—é—â–∏–π –æ–±—ä–µ–∫—Ç.
    :param listing_index: –ò–Ω–¥–µ–∫—Å —Ç–µ–∫—É—â–µ–≥–æ –æ–±—ä–µ–∫—Ç–∞.
    :param photo_index: –ò–Ω–¥–µ–∫—Å —Ç–µ–∫—É—â–µ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏.
    :param total_photos: –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π.
    :param total_listings: –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—ä–µ–∫—Ç–æ–≤.
    :param listing_id: ID –æ–±—ä–µ–∫—Ç–∞.
    :return: InlineKeyboardMarkup
    """
    buttons = []
    if not isinstance(listing_index, int) or not isinstance(photo_index, int):
        logging.error(f"–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –∏–Ω–¥–µ–∫—Å—ã: listing_index={listing_index}, photo_index={photo_index}")
        return InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text="üîô –í –º–µ–Ω—é", callback_data="return_to_menu")]])

    if listing_exists:
        if comments_provided:
            buttons.append([InlineKeyboardButton(text="–ó–∞–≤–µ—Ä—à–∏—Ç—å –∑–∞—è–≤–∫—É", callback_data="finish_request")])
        if photo_index > 0:
            buttons.append([InlineKeyboardButton(text="‚¨ÖÔ∏è –ü—Ä–µ–¥ —Ñ–æ—Ç–æ", callback_data=f"prev_photo_{listing_index}_{photo_index-1}")])
        if photo_index < total_photos - 1:
            buttons.append([InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥ —Ñ–æ—Ç–æ", callback_data=f"next_photo_{listing_index}_{photo_index+1}")])
        if has_next_listing:
            buttons.append([InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥ –æ–±—ä–µ–∫—Ç", callback_data=f"next_listing_{listing_index+1}")])
        if listing_index > 0:
            buttons.append([InlineKeyboardButton(text="‚¨ÖÔ∏è –ü—Ä–µ–¥ –æ–±—ä–µ–∫—Ç", callback_data=f"prev_listing_{listing_index-1}")])
        buttons.append([InlineKeyboardButton(text="–ò–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç", callback_data=f"interested_{listing_id}")])
    buttons.append([InlineKeyboardButton(text="üîô –í –º–µ–Ω—é", callback_data="return_to_menu")])
    return InlineKeyboardMarkup(inline_keyboard=buttons)